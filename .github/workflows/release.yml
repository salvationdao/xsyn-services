name: Publish Release

on:
  push:
    tags:
      - "v*.*.*"
      - "!*-rc*"

permissions:
  contents: write

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: slack-notification
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{workflow} has started'
          message_format: '{emoji} *{workflow}* started in <{repo_url}|{repo}>'
          footer: 'Linked Repo <{repo_url}|{repo}> | <{run_url}|View Run>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2 # install go
        with:
          go-version: 1.17
      # Setup
      # Multi key private go repos
      # https://gist.github.com/jrapoport/d12f60029eef017354d0ec982b918258
      - name: Setup go private repos access
        run: |
          mkdir -p ~/.ssh
          echo -e "Host hub.github.com\n  HostName github.com\n IdentityFile ~/.ssh/id_ed25519_hub\n  IdentitiesOnly yes" >> ~/.ssh/config
          echo -e "Host bridge.github.com\n  HostName github.com\n IdentityFile ~/.ssh/id_ed25519_bridge\n  IdentitiesOnly yes" >> ~/.ssh/config
          echo -e "Host sale.github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_ed25519_sale\n  IdentitiesOnly yes" >> ~/.ssh/config
          echo -e "Host loghelpers.github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_ed25519_loghelpers\n  IdentitiesOnly yes" >> ~/.ssh/config
          echo '${{ secrets.GH_DEPLOY_HUB_PK }}' > ~/.ssh/id_ed25519_hub
          chmod 600 ~/.ssh/id_ed25519_hub
          echo '${{ secrets.GH_DEPLOY_BRIDGE_PK }}' > ~/.ssh/id_ed25519_bridge
          chmod 600 ~/.ssh/id_ed25519_bridge
          echo '${{ secrets.GH_DEPLOY_SALE_PK }}' > ~/.ssh/id_ed25519_sale
          chmod 600 ~/.ssh/id_ed25519_sale
          echo '${{ secrets.GH_DEPLOY_LOGHELPERS_PK }}' > ~/.ssh/id_ed25519_loghelpers
          chmod 600 ~/.ssh/id_ed25519_loghelpers
          git config --global user.name "Github CI"
          git config --global user.email "team@syndicate.ninja"
          git config --global --add url."git@hub.github.com:ninja-syndicate/hub".insteadOf "https://github.com/ninja-syndicate/hub"
          git config --global --add url."git@bridge.github.com:ninja-syndicate/supremacy-bridge".insteadOf "https://github.com/ninja-syndicate/supremacy-bridge"
          git config --global --add url."git@sale.github.com:ninja-software/sale".insteadOf "https://github.com/ninja-software/sale"
          git config --global --add url."git@loghelpers.github.com:ninja-software/log_helpers".insteadOf "https://github.com/ninja-software/log_helpers"

      - name: Setup build env
        run: |
          export GOPRIVATE="github.com/ninja-syndicate/*"
          mkdir -p bin
          make tools

      - name: Copy dependants
        run: |
          mkdir -p deploy
          cp bin/migrate deploy/.
          cp -r ./init deploy/.
          cp -r ./scripts deploy/.
          cp -r ./passport/configs deploy/.
          cp -r ./passport/asset deploy/.
          cp -r ./migrations deploy/.

      - name: Get build metadata
        run: |
          echo "GITVERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "GITHASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "GITBRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "BUILDDATE=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "GITSTATE=$(git status --porcelain | wc -l)" >> $GITHUB_ENV

      - name: Build API server
        run: |
          go build \
            -ldflags "-X main.Version=${{env.GITVERSION}} -X main.GitHash=${{env.GITHASH}} -X main.GitBranch=${{env.GITBRANCH}} -X main.BuildDate=${{env.BUILDDATE}} -X main.UnCommittedFiles=${{env.GITSTATE}}" \
            -gcflags=all=-trimpath=${{ github.workspace }} \
            -asmflags=all=-trimpath=${{ github.workspace }} \
            -o deploy/passport-api \
            passport/main.go

      - name: Add info text
        run: deploy/passport-api version --full > deploy/BuildInfo.txt

      - name: Tar Gzip
        run: |
          mv deploy passport-api_${{env.GITVERSION}}
          tar czf passport-api_${{env.GITVERSION}}.tar.gz passport-api_${{env.GITVERSION}}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && ${{ !env.ACT }}
        with:
          prerelease: true
          files: passport-api_${{env.GITVERSION}}.tar.gz
          generate_release_notes: true

      - name: slack-notification
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
          footer: 'Linked Repo <{repo_url}|{repo}> | <{run_url}|View Run>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


