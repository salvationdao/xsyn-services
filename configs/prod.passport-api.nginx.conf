server {
    server_name api.xsyn.io api.passport.supremacy.game api.sale.supremacy.game api.xsyn.io api.passport.supremacy.game api.sale.supremacy.game api.test-passport.supremacy.game api.test-sale.supremacy.game;
    listen 80;

    # cerbot challenge
    # Used by Lets Encrypt
    location /.well-known/acme-challenge {
        root /var/lib/letsencrypt;
        default_type "text/plain";
        try_files $uri =404;
    }

    if ($uri !~ .well-known) {
        return 301 https://$host$request_uri;
    }
}
server {
    server_name api.xsyn.io api.passport.supremacy.game api.sale.supremacy.game api.xsyn.io api.passport.supremacy.game api.sale.supremacy.game api.test-passport.supremacy.game api.test-sale.supremacy.game;

    ### ssl cert
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/api.xsyn.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.xsyn.io/privkey.pem;

    set $api_server http://127.0.0.1:8086;

    # metrics for prometheus
    location /node_metrics {
        proxy_pass http://localhost:9100/metrics;
        proxy_read_timeout 1s;
        proxy_set_header Host $host;

        allow 180.150.125.15; # vic park office
        allow 149.28.177.152; # jumpbox
        allow 45.77.218.204; # sup-monitor-1.ninja-backstage.com
        allow 172.31.0.0/16; # AWS VPC
        allow 127.0.0.0/24;
        deny all;
    }
    location /metrics {
        proxy_pass $api_server;
        proxy_read_timeout 1s;
        proxy_set_header Host $host;

        allow 180.150.125.15; # vic park office
        allow 149.28.177.152; # jumpbox
        allow 45.77.218.204; # sup-monitor-1.ninja-backstage.com
        allow 172.31.0.0/16; # AWS VPC
        allow 127.0.0.0/24;
        deny all;
    }
    location /api {
        add_header 'Access-Control-Allow-Origin' *;

        proxy_pass $api_server;
        proxy_read_timeout 196000s;
        proxy_send_timeout 196000s;
        proxy_set_header Host $host;

        # forward user details
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }

    location / {
        # set $cors '';
        # # Allow
        # # https://survive.supremacy.game/
        # if ($http_origin ~ '^https?://(survive\.supremacy\.game)') {
        #     set $cors 'true';
        # }

        # if ($cors = 'true') {
        #     add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #     add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        #     # required to be able to read Authorization header in frontend
        #     #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        # }
        # if ($request_method = 'OPTIONS') {
        #     # required for pre-flight
        #     # no way of avoiding repeat, because code outside if is else
        #     # and only last if is exec if the condition is the same
        #     add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        #     add_header 'Access-Control-Allow-Credentials' 'true' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        #     # Tell client that this pre-flight info is valid for 20 days
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Type' 'text/plain charset=UTF-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }
        # root /usr/share/ninja_syndicate/passport-web_online;
        # try_files /maintenance.html $uri /index.html;
        return 301 https://passport.xsyn.io;
    }
}
